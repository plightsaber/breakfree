$module ()
$import Modules.GeneralTools.lslm();

integer CHANNEL_ATTACHMENT = -9999277;

// Gui Variables.
integer guiID;
integer multipageIndex = 0;

// GUI variables
key guiUserID;
list guiButtons;
integer guiChannel;
integer guiScreen;
integer guiScreenLast;
string guiText;

exit(string prmReason)
{
	llListenRemove(guiID);
	if (isSet(prmReason)) {
		simpleRequest("setTimedOut", prmReason);
		simpleRequest("startRecoveryTimer", prmReason);
	}
}

guiRequest(string prmGUI, integer prmRestore, key prmUserID, integer prmScreen) {
  string guiRequest = "";
  guiRequest = llJsonSetValue(guiRequest, ["function"], prmGUI);
  guiRequest = llJsonSetValue(guiRequest, ["restorescreen"], (string)prmRestore);
  guiRequest = llJsonSetValue(guiRequest, ["userkey"], (string)prmUserID);
  guiRequest = llJsonSetValue(guiRequest, ["value"], (string)prmScreen);
  llMessageLinked(LINK_THIS, 0, guiRequest, NULL_KEY);
  exit("");
}

list multipageGui(list prmButtons, integer prmRows, integer prmPage) {
  	list mpGui = [];
  	integer buttonCount = llGetListLength(prmButtons);
  	integer availableRows = prmRows;

  	if (buttonCount > 3 * prmRows) {
  		// Devote a row to navigation buttons
    	availableRows--;
    	mpGui += ["<< Previous", " ", "Next >>"];

    	multipageIndex = prmPage;
	}

	// Set page index
	multipageIndex = prmPage;
	if (prmPage < 0) {
		multipageIndex = llFloor(buttonCount / (3 * availableRows));
	} else if (prmPage * availableRows * 3 > buttonCount) {
		multipageIndex = 0;
	}

  	integer mpIndex = multipageIndex * availableRows * 3;
  	for (mpIndex; mpIndex < buttonCount; mpIndex++) {
  		mpGui += llList2String(prmButtons, mpIndex);
    	if (llGetListLength(mpGui) == prmRows * 3) {
    		return mpGui;
		}
  	}

  	return mpGui;
}

simpleAttachedRequest(string prmFunction,string prmValue){
  string request = "";
  (request = llJsonSetValue(request,["function"],prmFunction));
  (request = llJsonSetValue(request,["value"],prmValue));
  llRegionSayTo(llGetOwner(),CHANNEL_ATTACHMENT,request);
}
